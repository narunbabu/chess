name: Deploy to Production

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}   # <-- your private key (PEM), no passphrase
          port: 22
          script_stop: true
          script: |
            set -e
            cd /opt/Chess-Web
            git fetch origin
            git reset --hard origin/master

            # backend (Laravel)
            cd chess-backend

            # Install dependencies with optimizations
            sudo -u www-data composer install --no-dev --optimize-autoloader --classmap-authoritative || true

            # Run migrations
            php artisan migrate --force || true

            # Clear Laravel caches
            php artisan config:clear
            php artisan route:clear
            php artisan cache:clear
            php artisan view:clear

            composer dump-autoload --optimize 

            # Rebuild caches
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize 

            # Restart queue workers
            php artisan queue:restart || echo "No queue workers running"

            # frontend (React)
            cd ../chess-frontend
            npm install
            npm run build

            # deploy frontend build to web server
            rsync -av --delete build/ /var/www/chess99.com/

            # Set correct permissions
            chown -R www-data:www-data /opt/Chess-Web/chess-backend/storage
            chown -R www-data:www-data /opt/Chess-Web/chess-backend/bootstrap/cache

            # restart services
            systemctl restart php8.3-fpm || true
            systemctl reload nginx || true
            systemctl restart laravel-reverb || echo "Reverb service not found - please create it"

            # verify services
            echo "Checking service status..."
            systemctl is-active nginx || echo "❌ Nginx not running"
            systemctl is-active php8.3-fpm || echo "❌ PHP-FPM not running"
            systemctl is-active laravel-reverb || echo "⚠️  Reverb not running - WebSockets will not work"

            echo "✅ Deployment complete!"
